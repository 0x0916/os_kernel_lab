#第三次作业  process/thread
1. process与thread在实现上和执行上有何区别？
2. process与program（程序)的区别与联系是什么？
3. process的执行状态转换图是啥？各个状态的含义是什么？
4. thread的实现方式有几种？这几种有何区别？
5. fork和exec的执行逻辑（大致要完成的事情）是什么？
6. 父进程与子进程之间在内容上有何差异？在执行上有何差异？
7. 父进程fork完子进程后，这两个进程在执行的过程中是否有先后顺序？
8. 进程/线程上下文切换的执行逻辑是什么？二者有无区别？如有，区别是啥？
9. 为何vfork机制在有了Copy on Write (简称COW)技术后意义变得不大了？
10. 如何在ucore中实现COW技术？
11. 进程有几个栈？栈的作用是什么？
12. exec的内核实现中，如何返回到新的进程的入口点，并正确执行用户态的进程？
13. 内核线程和用户进程的mm结构有何区别？为什么？
14. 如何在ucore中实现可在用户态执行的线程？
